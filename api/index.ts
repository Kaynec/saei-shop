/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * SaeiShop Project
 * OpenAPI spec version: 1.0.0 (v1)
 */
import { customInstance } from "./mutator";

// https://stackoverflow.com/questions/49579094/typescript-conditional-types-filter-out-readonly-properties-pick-only-requir/49579497#49579497
type IfEquals<X, Y, A = X, B = never> =
  (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2 ? A : B;

type WritableKeys<T> = {
  [P in keyof T]-?: IfEquals<
    { [Q in P]: T[P] },
    { -readonly [Q in P]: T[P] },
    P
  >;
}[keyof T];

type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (
  k: infer I
) => void
  ? I
  : never;
type DistributeReadOnlyOverUnions<T> = T extends any ? NonReadonly<T> : never;

type Writable<T> = Pick<T, WritableKeys<T>>;
type NonReadonly<T> = [T] extends [UnionToIntersection<T>]
  ? {
      [P in keyof Writable<T>]: T[P] extends object
        ? NonReadonly<NonNullable<T[P]>>
        : T[P];
    }
  : DistributeReadOnlyOverUnions<T>;

export interface AddressDetailInPut {
  /** @maxLength 100 */
  province: string;
  /** @maxLength 200 */
  city: string;
  /** @maxLength 15 */
  postal_code: string;
  /** @maxLength 400 */
  address_detail: string;
}

export interface AddressDetailOutPut {
  readonly id: number;
  /** @maxLength 100 */
  province: string;
  /** @maxLength 200 */
  city: string;
  /** @maxLength 15 */
  postal_code: string;
  /** @maxLength 400 */
  address_detail: string;
}

export interface AddressInPut {
  /** @maxLength 100 */
  province: string;
  /** @maxLength 200 */
  city: string;
  /** @maxLength 15 */
  postal_code: string;
  /** @maxLength 400 */
  address_detail: string;
}

export interface AddressListOutPut {
  readonly id: number;
  /** @maxLength 100 */
  province: string;
  /** @maxLength 200 */
  city: string;
  /** @maxLength 15 */
  postal_code: string;
  /** @maxLength 400 */
  address_detail: string;
}

export interface AddressOutPut {
  readonly id: number;
  /** @maxLength 100 */
  province: string;
  /** @maxLength 200 */
  city: string;
  user: number;
  /** @maxLength 15 */
  postal_code: string;
  /** @maxLength 400 */
  address_detail: string;
}

export interface BannerListOutPut {
  readonly id: number;
  readonly picture: string;
  /** @maxLength 200 */
  link: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  location: LocationEnum;
}

export interface BlogCommentDetailInPut {
  /** @maxLength 1000 */
  content: string;
}

export interface BlogCommentDetailOutPut {
  readonly id: number;
  /** @maxLength 500 */
  content: string;
  blog: number;
  created_at?: string;
}

export interface BlogCommentInPut {
  /** @maxLength 1000 */
  content: string;
  blog: number;
}

export interface BlogCommentOutPut {
  readonly id: number;
  /** @maxLength 500 */
  content: string;
  blog: number;
  user: number;
}

export interface BlogDetailUserOutPut {
  readonly id: number;
  /** @maxLength 200 */
  title: string;
  readonly category_list: string;
  /**
   * @maxLength 300
   * @pattern ^[-a-zA-Z0-9_]+$
   */
  slug: string;
  readonly content: string;
  readonly picture: string;
  created_at?: string;
  readonly comments: string;
}

export interface BlogListOutPut {
  readonly id: number;
  /**
   * @maxLength 300
   * @pattern ^[-a-zA-Z0-9_]+$
   */
  slug: string;
  /** @maxLength 200 */
  title: string;
  readonly picture: string;
  readonly comments_number: number;
  created_at?: string;
}

export type CategoryListOutPutChildren = { [key: string]: unknown };

export interface CategoryListOutPut {
  readonly id: number;
  /** @maxLength 50 */
  name: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  category_type?: CategoryTypeEnum;
  /** @nullable */
  parent?: number | null;
  readonly children: CategoryListOutPutChildren;
}

/**
 * * `1` - PRODUCT
 * `2` - BLOG
 * `3` - FEATURE
 */
export type CategoryTypeEnum =
  (typeof CategoryTypeEnum)[keyof typeof CategoryTypeEnum];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CategoryTypeEnum = {
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
} as const;

export interface InPutLogin {
  phone_number: string;
  password: string;
}

export interface InputChangePassword {
  otp: number;
  /** @minLength 8 */
  new_password: string;
  /** @maxLength 255 */
  confirm_new_password: string;
  /** @maxLength 100 */
  phone_number: string;
}

export interface InputEmailOtp {
  email: string;
}

export interface InputPasswordOtp {
  /** @maxLength 11 */
  phone_number: string;
}

export interface InputPhoneOtp {
  /** @maxLength 11 */
  phone_number: string;
}

export interface InputRegister {
  /** @maxLength 13 */
  phone_number: string;
  /** @maxLength 255 */
  firstname: string;
  /** @maxLength 255 */
  lastname: string;
  /** @minLength 8 */
  password: string;
  /** @maxLength 255 */
  confirm_password: string;
}

export interface InputVerifyEmail {
  otp: number;
}

export interface InputVerifyPhoneSerilazer {
  /** @maxLength 11 */
  phone_number: string;
  otp: string;
}

export interface LabelListOutPut {
  readonly id: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  label_type?: LabelTypeEnum;
  /** @maxLength 100 */
  name: string;
}

/**
 * * `1` - GENERAL
 * `2` - BRAND
 */
export type LabelTypeEnum = (typeof LabelTypeEnum)[keyof typeof LabelTypeEnum];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LabelTypeEnum = {
  NUMBER_1: 1,
  NUMBER_2: 2,
} as const;

/**
 * * `1` - FIRST
 * `2` - SECOND
 * `3` - THRID
 */
export type LocationEnum = (typeof LocationEnum)[keyof typeof LocationEnum];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LocationEnum = {
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
} as const;

export interface MessageListUserOutPut {
  readonly id: number;
  /** @maxLength 200 */
  title: string;
  /** @maxLength 500 */
  passage: string;
}

export type OutPutLoginToken = { [key: string]: unknown };

export interface OutPutLogin {
  readonly token: OutPutLoginToken;
}

export interface OutPutRegister {
  /** @maxLength 100 */
  firstname: string;
  /** @maxLength 100 */
  lastname: string;
  /** @maxLength 11 */
  phone_number: string;
  created_at?: string;
  readonly updated_at: string;
}

export interface PaginatedBlogList {
  limit: number;
  offset: number;
  count: number;
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: BlogListOutPut[];
}

export interface PaginatedProduct {
  limit: number;
  offset: number;
  count: number;
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: ProudctOutPut[];
}

export interface ProductDetailOutPut {
  readonly comments_count: number;
  images: InlineSerializer[];
  valueslist: InlineSerializer[];
  labels: InlineSerializer[];
  reviews: InlineSerializer[];
  questions: InlineSerializer[];
  notes: InlineSerializer[];
  title: string;
  /** @pattern ^[-a-zA-Z0-9_]+$ */
  slug: string;
  readonly main_image: string;
  /** @pattern ^-?\d{0,15}(?:\.\d{0,0})?$ */
  price: string;
  /** @pattern ^-?\d{0,15}(?:\.\d{0,0})?$ */
  off_price: string;
  quantity: number;
  id: number;
  description: string;
  discount_end_time: string;
  /** @pattern ^-?\d{0,3}(?:\.\d{0,1})?$ */
  score: string;
  created_at?: string;
  updated_at?: string;
}

export interface ProudctOutPut {
  readonly id: number;
  /** @maxLength 100 */
  title: string;
  /**
   * @maxLength 50
   * @pattern ^[-\w]+$
   */
  slug: string;
  readonly main_image: string;
  /** @pattern ^-?\d{0,15}(?:\.\d{0,0})?$ */
  price: string;
  /** @pattern ^-?\d{0,15}(?:\.\d{0,0})?$ */
  off_price: string;
  /** @nullable */
  discount_end_time?: string | null;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   * @nullable
   */
  order_limit?: number | null;
  /** @pattern ^-?\d{0,2}(?:\.\d{0,2})?$ */
  score?: string;
}

export interface QuestionDetailInput {
  question: string;
}

export interface QuestionDetailOutPut {
  readonly id: number;
  /** @maxLength 300 */
  question: string;
  product: number;
}

export interface QuestionInput {
  product: number;
  question: string;
}

export interface QuestionOutPut {
  readonly id: number;
  /** @maxLength 300 */
  question: string;
  product: number;
}

/**
 * * `1` - VERYBAD
 * `2` - BAD
 * `3` - SOSO
 * `4` - GOOD
 * `5` - VERYGOOD
 */
export type RatingEnum = (typeof RatingEnum)[keyof typeof RatingEnum];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RatingEnum = {
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_4: 4,
  NUMBER_5: 5,
} as const;

export interface ReviewsInPut {
  product: number;
  comment?: string;
  rating: RatingEnum;
}

export interface ReviewsOutPut {
  user: number;
  product: number;
  /**
   * @maxLength 500
   * @nullable
   */
  comment?: string | null;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  rating: RatingEnum;
}

export interface SliderListOutPut {
  readonly id: number;
  readonly laptop_picture: string;
  /** @maxLength 200 */
  link: string;
  readonly middle_picture: string;
  readonly mobile_picture: string;
}

export interface StoryListOutPut {
  readonly id: number;
  /**
   * @maxLength 50
   * @nullable
   */
  title?: string | null;
  readonly picture: string;
  /** @maxLength 200 */
  link: string;
  readonly content_picture: string;
}

export interface TokenRefresh {
  readonly access: string;
  refresh: string;
}

export interface TokenVerify {
  token: string;
}

export interface UserInput {
  /** @maxLength 100 */
  firstname: string;
  /** @maxLength 100 */
  lastname: string;
  email?: string;
  birthdate?: string;
  profile_image?: string;
}

export interface UserMessageOutPut {
  readonly id: number;
  message: MessageListUserOutPut;
  is_seen?: boolean;
}

export interface UserOutPut {
  /** @maxLength 100 */
  firstname: string;
  /** @maxLength 100 */
  lastname: string;
  /** @maxLength 11 */
  phone_number: string;
  /** @nullable */
  profile_image?: string | null;
  /**
   * @maxLength 254
   * @nullable
   */
  email?: string | null;
  email_verified?: boolean;
  /** @nullable */
  birthdate?: string | null;
  created_at?: string;
  readonly updated_at: string;
}

export interface InlineSerializer {
  id?: string;
  file?: string;
}

export type ApiGeneralBlogListRetrieveParams = {
  categories__in?: string;
  created_at__range?: string;
  limit?: number;
  offset?: number;
  search?: string;
};

export type ApiGeneralSeenMessageReportUpdate200 = { [key: string]: unknown };

export type ApiProductGetProductRetrieveParams = {
  categories__in?: string;
  created_at__range?: string;
  has_discount?: string;
  is_exists?: string;
  labels__in?: string;
  limit?: number;
  off_price__range?: string;
  offset?: number;
  /**
   * * `1` - EXPENSIVE
   * `2` - INEXPENSIVE
   * `3` - NEWEST
   * `4` - FAVOURITE
   */
  order_by?: ApiProductGetProductRetrieveOrderBy;
  search?: string;
};

export type ApiProductGetProductRetrieveOrderBy =
  (typeof ApiProductGetProductRetrieveOrderBy)[keyof typeof ApiProductGetProductRetrieveOrderBy];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ApiProductGetProductRetrieveOrderBy = {
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_4: 4,
} as const;

export type ApiProductQuestionDetailDestroy200 = { [key: string]: unknown };

export type ApiUserAddressDetailDestroy200 = { [key: string]: unknown };

export type ApiUserChangePasswordCreate200 = { [key: string]: unknown };

export type ApiUserRequestVerifyPhoneCreate200 = { [key: string]: unknown };

export type ApiUserRequsetChangePasswordCreate200 = { [key: string]: unknown };

export type ApiUserRequsetVerifyEmailCreate200 = { [key: string]: unknown };

export type ApiUserVerifyEmailCreate200 = { [key: string]: unknown };

export type ApiUserVerifyPhoneCreate200 = { [key: string]: unknown };

export const apiAuthJwtCustomerLoginCreate = (inPutLogin: InPutLogin) => {
  return customInstance<OutPutLogin>({
    url: `/api/auth/jwt/customer-login/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inPutLogin,
  });
};

export const apiAuthJwtManagerLoginCreate = (inPutLogin: InPutLogin) => {
  return customInstance<OutPutLogin>({
    url: `/api/auth/jwt/manager-login/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inPutLogin,
  });
};

/**
 * Takes a refresh type JSON web token and returns an access type JSON web
token if the refresh token is valid.
 */
export const apiAuthJwtRefreshCreate = (
  tokenRefresh: NonReadonly<TokenRefresh>
) => {
  return customInstance<TokenRefresh>({
    url: `/api/auth/jwt/refresh/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: tokenRefresh,
  });
};

/**
 * Takes a token and indicates if it is valid.  This view provides no
information about a token's fitness for a particular use.
 */
export const apiAuthJwtVerifyCreate = (tokenVerify: TokenVerify) => {
  return customInstance<TokenVerify>({
    url: `/api/auth/jwt/verify/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: tokenVerify,
  });
};

export const apiGeneralBannerListRetrieve = () => {
  return customInstance<BannerListOutPut>({
    url: `/api/general/banner-list/`,
    method: "GET",
  });
};

export const apiGeneralBlogCommentDetailUpdate = (
  id: number,
  blogCommentDetailInPut: BlogCommentDetailInPut
) => {
  return customInstance<BlogCommentDetailOutPut>({
    url: `/api/general/blog-comment-detail/${id}/`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: blogCommentDetailInPut,
  });
};

export const apiGeneralBlogCommentDetailDestroy = (id: number) => {
  return customInstance<void>({
    url: `/api/general/blog-comment-detail/${id}/`,
    method: "DELETE",
  });
};

export const apiGeneralBlogDetailRetrieve = (slug: string) => {
  return customInstance<BlogDetailUserOutPut>({
    url: `/api/general/blog-detail/${slug}/`,
    method: "GET",
  });
};

export const apiGeneralBlogListRetrieve = (
  params?: ApiGeneralBlogListRetrieveParams
) => {
  return customInstance<PaginatedBlogList>({
    url: `/api/general/blog-list/`,
    method: "GET",
    params,
  });
};

export const apiGeneralLeaveCommentBlogCreate = (
  blogCommentInPut: BlogCommentInPut
) => {
  return customInstance<BlogCommentOutPut>({
    url: `/api/general/leave-comment-blog/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: blogCommentInPut,
  });
};

export const apiGeneralMessageListUserRetrieve = () => {
  return customInstance<UserMessageOutPut>({
    url: `/api/general/message-list-user/`,
    method: "GET",
  });
};

export const apiGeneralSeenMessageReportUpdate = (id: number) => {
  return customInstance<ApiGeneralSeenMessageReportUpdate200>({
    url: `/api/general/seen-message-report/${id}/`,
    method: "PUT",
  });
};

export const apiGeneralSliderListRetrieve = () => {
  return customInstance<SliderListOutPut>({
    url: `/api/general/slider-list/`,
    method: "GET",
  });
};

export const apiGeneralStoryListRetrieve = () => {
  return customInstance<StoryListOutPut>({
    url: `/api/general/story-list/`,
    method: "GET",
  });
};

export const apiProductBrandListRetrieve = () => {
  return customInstance<LabelListOutPut>({
    url: `/api/product/brand-list/`,
    method: "GET",
  });
};

export const apiProductCategoryListRetrieve = (categoryType: number) => {
  return customInstance<CategoryListOutPut>({
    url: `/api/product/category-list/${categoryType}/`,
    method: "GET",
  });
};

export const apiProductGetProductRetrieve = (
  params?: ApiProductGetProductRetrieveParams
) => {
  return customInstance<PaginatedProduct>({
    url: `/api/product/get-product/`,
    method: "GET",
    params,
  });
};

export const apiProductProductDetailRetrieve = (slug: string) => {
  return customInstance<ProductDetailOutPut>({
    url: `/api/product/product-detail/${slug}/`,
    method: "GET",
  });
};

export const apiProductProductReviewCreate = (reviewsInPut: ReviewsInPut) => {
  return customInstance<ReviewsOutPut>({
    url: `/api/product/product-review/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: reviewsInPut,
  });
};

export const apiProductQuestionCreate = (questionInput: QuestionInput) => {
  return customInstance<QuestionOutPut>({
    url: `/api/product/question/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: questionInput,
  });
};

export const apiProductQuestionDetailUpdate = (
  id: number,
  questionDetailInput: QuestionDetailInput
) => {
  return customInstance<QuestionDetailOutPut>({
    url: `/api/product/question-detail/${id}/`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: questionDetailInput,
  });
};

export const apiProductQuestionDetailDestroy = (id: number) => {
  return customInstance<ApiProductQuestionDetailDestroy200>({
    url: `/api/product/question-detail/${id}/`,
    method: "DELETE",
  });
};

export const apiUserAddressDetailUpdate = (
  id: number,
  addressDetailInPut: AddressDetailInPut
) => {
  return customInstance<AddressDetailOutPut>({
    url: `/api/user/address-detail/${id}/`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: addressDetailInPut,
  });
};

export const apiUserAddressDetailDestroy = (id: number) => {
  return customInstance<ApiUserAddressDetailDestroy200>({
    url: `/api/user/address-detail/${id}/`,
    method: "DELETE",
  });
};

export const apiUserAddressListUserRetrieve = () => {
  return customInstance<AddressListOutPut>({
    url: `/api/user/address-list-user/`,
    method: "GET",
  });
};

export const apiUserChangePasswordCreate = (
  inputChangePassword: InputChangePassword
) => {
  return customInstance<ApiUserChangePasswordCreate200>({
    url: `/api/user/change-password/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputChangePassword,
  });
};

export const apiUserCreateAddressCreate = (addressInPut: AddressInPut) => {
  return customInstance<AddressOutPut>({
    url: `/api/user/create-address/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: addressInPut,
  });
};

export const apiUserRegisterCreate = (inputRegister: InputRegister) => {
  return customInstance<OutPutRegister>({
    url: `/api/user/register/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputRegister,
  });
};

export const apiUserRequestVerifyPhoneCreate = (
  inputPhoneOtp: InputPhoneOtp
) => {
  return customInstance<ApiUserRequestVerifyPhoneCreate200>({
    url: `/api/user/request-verify-phone/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputPhoneOtp,
  });
};

export const apiUserRequsetChangePasswordCreate = (
  inputPasswordOtp: InputPasswordOtp
) => {
  return customInstance<ApiUserRequsetChangePasswordCreate200>({
    url: `/api/user/requset-change-password/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputPasswordOtp,
  });
};

export const apiUserRequsetVerifyEmailCreate = (
  inputEmailOtp: InputEmailOtp
) => {
  return customInstance<ApiUserRequsetVerifyEmailCreate200>({
    url: `/api/user/requset-verify-email/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputEmailOtp,
  });
};

export const apiUserUserRetrieve = () => {
  return customInstance<UserOutPut>({ url: `/api/user/user/`, method: "GET" });
};

export const apiUserUserUpdate = (userInput: UserInput) => {
  const formData = new FormData();
  formData.append("firstname", userInput.firstname);
  formData.append("lastname", userInput.lastname);
  if (userInput.email !== undefined && userInput.email !== null) {
    formData.append("email", userInput.email);
  }
  if (userInput.birthdate !== undefined && userInput.birthdate !== null) {
    formData.append("birthdate", userInput.birthdate);
  }
  if (
    userInput.profile_image !== undefined &&
    userInput.profile_image !== null
  ) {
    formData.append("profile_image", userInput.profile_image);
  }

  return customInstance<UserOutPut>({
    url: `/api/user/user/`,
    method: "PUT",
    headers: { "Content-Type": "multipart/form-data" },
    data: formData,
  });
};

export const apiUserVerifyEmailCreate = (
  inputVerifyEmail: InputVerifyEmail
) => {
  return customInstance<ApiUserVerifyEmailCreate200>({
    url: `/api/user/verify-email/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputVerifyEmail,
  });
};

export const apiUserVerifyPhoneCreate = (
  inputVerifyPhoneSerilazer: InputVerifyPhoneSerilazer
) => {
  return customInstance<ApiUserVerifyPhoneCreate200>({
    url: `/api/user/verify-phone/`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: inputVerifyPhoneSerilazer,
  });
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type ApiAuthJwtCustomerLoginCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiAuthJwtCustomerLoginCreate>>
>;
export type ApiAuthJwtManagerLoginCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiAuthJwtManagerLoginCreate>>
>;
export type ApiAuthJwtRefreshCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiAuthJwtRefreshCreate>>
>;
export type ApiAuthJwtVerifyCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiAuthJwtVerifyCreate>>
>;
export type ApiGeneralBannerListRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralBannerListRetrieve>>
>;
export type ApiGeneralBlogCommentDetailUpdateResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralBlogCommentDetailUpdate>>
>;
export type ApiGeneralBlogCommentDetailDestroyResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralBlogCommentDetailDestroy>>
>;
export type ApiGeneralBlogDetailRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralBlogDetailRetrieve>>
>;
export type ApiGeneralBlogListRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralBlogListRetrieve>>
>;
export type ApiGeneralLeaveCommentBlogCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralLeaveCommentBlogCreate>>
>;
export type ApiGeneralMessageListUserRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralMessageListUserRetrieve>>
>;
export type ApiGeneralSeenMessageReportUpdateResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralSeenMessageReportUpdate>>
>;
export type ApiGeneralSliderListRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralSliderListRetrieve>>
>;
export type ApiGeneralStoryListRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiGeneralStoryListRetrieve>>
>;
export type ApiProductBrandListRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiProductBrandListRetrieve>>
>;
export type ApiProductCategoryListRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiProductCategoryListRetrieve>>
>;
export type ApiProductGetProductRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiProductGetProductRetrieve>>
>;
export type ApiProductProductDetailRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiProductProductDetailRetrieve>>
>;
export type ApiProductProductReviewCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiProductProductReviewCreate>>
>;
export type ApiProductQuestionCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiProductQuestionCreate>>
>;
export type ApiProductQuestionDetailUpdateResult = NonNullable<
  Awaited<ReturnType<typeof apiProductQuestionDetailUpdate>>
>;
export type ApiProductQuestionDetailDestroyResult = NonNullable<
  Awaited<ReturnType<typeof apiProductQuestionDetailDestroy>>
>;
export type ApiUserAddressDetailUpdateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserAddressDetailUpdate>>
>;
export type ApiUserAddressDetailDestroyResult = NonNullable<
  Awaited<ReturnType<typeof apiUserAddressDetailDestroy>>
>;
export type ApiUserAddressListUserRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiUserAddressListUserRetrieve>>
>;
export type ApiUserChangePasswordCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserChangePasswordCreate>>
>;
export type ApiUserCreateAddressCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserCreateAddressCreate>>
>;
export type ApiUserRegisterCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserRegisterCreate>>
>;
export type ApiUserRequestVerifyPhoneCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserRequestVerifyPhoneCreate>>
>;
export type ApiUserRequsetChangePasswordCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserRequsetChangePasswordCreate>>
>;
export type ApiUserRequsetVerifyEmailCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserRequsetVerifyEmailCreate>>
>;
export type ApiUserUserRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof apiUserUserRetrieve>>
>;
export type ApiUserUserUpdateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserUserUpdate>>
>;
export type ApiUserVerifyEmailCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserVerifyEmailCreate>>
>;
export type ApiUserVerifyPhoneCreateResult = NonNullable<
  Awaited<ReturnType<typeof apiUserVerifyPhoneCreate>>
>;
